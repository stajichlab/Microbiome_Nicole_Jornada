knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(tidyverse)
otu = read.table(file="JornadaBacQ2FWLEsilva515806.V1.otu_table.fix.txt", header=T, sep='\t')
head(otu)
head(otu)
dim(otu)
dim(otu)
tax <- read.table(file="taxonomy.fix.tsv", sep='\t', header=TRUE)
head(tax)
dim(tax)
tax_filtered <- tax[tax$OTU.ID %in% otu$OTU.ID,]
head(tax_filtered)
dim(tax_filtered)
dim(otu)
tax_filtered = tax_filtered[,c(1,2)]
tax_filtered = separate(tax_filtered, Taxon, c("Kingdom","Phylum","Class","Order", "Family", "Genus","Species"), sep= ";", remove=TRUE)
dim(tax_filtered)
head(tax_filtered)
write.csv(tax_filtered, file="taxonomy_phyloseq_fix.csv")
otus <- read.table("JornadaBacQ2FWLEsilva515806.V1.otu_table.fix",
header=T,sep="\t",row.names = 1)
otus <- read.table("JornadaBacQ2FWLEsilva515806.V1.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.csv("taxonomy_phyloseq_fix.csv",
sep=",",row.names=1)
row.names(taxmat) = taxmat$OTU.ID
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "tree.nwk"
tree = read.tree(treefile)
meta = read.table("FredMapDEc9.fix.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
meta <- meta[which(meta$Layer %in% c("Surface")),]
head(meta)
meta = read.table("FredMapDEc9.fix.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
physeq.prune
physeq.prune = prune_taxa(taxa_sums(physeq) > 10, physeq)
physeq.prune
physeq.prune = prune_taxa(taxa_sums(physeq) > 10, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 34456, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
otu_table(physeq.prune.rarefy)
Filtered_OTUs_table = otu_table(physeq.prune.rarefy)
write.csv(Filtered_OTUs_table, file="Filtered_OTUs_table.csv")
Filtered_TAX_table = tax_table(physeq.prune.rarefy)
write.csv(Filtered_TAX_table, file="Filtered_TAX_table.csv")
dim(Filtered_TAX_table)
dim(Filtered_OTUs_table)
ps.dist = phyloseq::distance(physeq.prune.rarefy, "unifrac")
set.seed(1)
adonis(ps.dist ~EC+pH+Clay+Silt+Sand+Gravel
+Sand_Fraction1to2mm+Sand_Fraction.5to1mm+Sand_Fraction.25to.5mm
+Sand_Fraction.1to.25.mm+Sand_Fraction.05to.1mm+MSM_No_Cover.pct.
+MSM_Total_Cover.pct.+MSM_Thick_Cover.pct.Thick.Average
+MSM_Patchy_Cover.pct.+MSM_Thick_Patchy_Togther_Cover.pct., as(sample_data(physeq.prune.rarefy),"data.frame"))
set.seed(1)
adonis(ps.dist ~EC+pH+Clay+Sand+Gravel
+Sand_Fraction1to2mm+Sand_Fraction.5to1mm+Sand_Fraction.25to.5mm
+Sand_Fraction.1to.25.mm+Sand_Fraction.05to.1mm+MSM_No_Cover.pct.
+MSM_Total_Cover.pct.+MSM_Thick_Cover.pct.Thick.Average
+MSM_Patchy_Cover.pct.+MSM_Thick_Patchy_Togther_Cover.pct., as(sample_data(physeq.prune.rarefy),"data.frame"))
set.seed(1)
adonis(ps.dist ~EC+pH+Clay+Sand+Gravel+Sand_Fraction1to2mm+Sand_Fraction.5to1mm, as(sample_data(physeq.prune.rarefy),"data.frame"))
physeq.prune.rarefy.ps.cca <- ordinate(physeq.prune.rarefy, "CCA",
formula = ~EC+pH+Clay+Sand+Gravel
+Sand_Fraction.25to.5mm)
physeq.prune.rarefy.ps.cca <- ordinate(physeq.prune.rarefy, "CCA",
formula = ~EC+pH+Clay+Sand+Gravel)
plot_ordination(physeq.prune.rarefy, physeq.prune.rarefy.ps.cca, type = "samples",
color = "Site", shape = "Site", label = "ID") + ggtitle("Bacterial Beta Diversity (CCA)") + theme(plot.title = element_text(hjust = 0.5))
